// Generated by gencpp from file rover_pkg/ToolData.msg
// DO NOT EDIT!


#ifndef ROVER_PKG_MESSAGE_TOOLDATA_H
#define ROVER_PKG_MESSAGE_TOOLDATA_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace rover_pkg
{
template <class ContainerAllocator>
struct ToolData_
{
  typedef ToolData_<ContainerAllocator> Type;

  ToolData_()
    : QDC_SIG1(0)
    , QDC_SIG2(0)
    , QDC_SIG3(0)
    , QDC_SIG4(0)
    , QDC_SIG5(0)
    , QDC_SIG6(0)
    , QDC_SIG7(0)  {
    }
  ToolData_(const ContainerAllocator& _alloc)
    : QDC_SIG1(0)
    , QDC_SIG2(0)
    , QDC_SIG3(0)
    , QDC_SIG4(0)
    , QDC_SIG5(0)
    , QDC_SIG6(0)
    , QDC_SIG7(0)  {
  (void)_alloc;
    }



   typedef int16_t _QDC_SIG1_type;
  _QDC_SIG1_type QDC_SIG1;

   typedef int16_t _QDC_SIG2_type;
  _QDC_SIG2_type QDC_SIG2;

   typedef int16_t _QDC_SIG3_type;
  _QDC_SIG3_type QDC_SIG3;

   typedef int16_t _QDC_SIG4_type;
  _QDC_SIG4_type QDC_SIG4;

   typedef int16_t _QDC_SIG5_type;
  _QDC_SIG5_type QDC_SIG5;

   typedef int16_t _QDC_SIG6_type;
  _QDC_SIG6_type QDC_SIG6;

   typedef int16_t _QDC_SIG7_type;
  _QDC_SIG7_type QDC_SIG7;





  typedef boost::shared_ptr< ::rover_pkg::ToolData_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rover_pkg::ToolData_<ContainerAllocator> const> ConstPtr;

}; // struct ToolData_

typedef ::rover_pkg::ToolData_<std::allocator<void> > ToolData;

typedef boost::shared_ptr< ::rover_pkg::ToolData > ToolDataPtr;
typedef boost::shared_ptr< ::rover_pkg::ToolData const> ToolDataConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::rover_pkg::ToolData_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::rover_pkg::ToolData_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::rover_pkg::ToolData_<ContainerAllocator1> & lhs, const ::rover_pkg::ToolData_<ContainerAllocator2> & rhs)
{
  return lhs.QDC_SIG1 == rhs.QDC_SIG1 &&
    lhs.QDC_SIG2 == rhs.QDC_SIG2 &&
    lhs.QDC_SIG3 == rhs.QDC_SIG3 &&
    lhs.QDC_SIG4 == rhs.QDC_SIG4 &&
    lhs.QDC_SIG5 == rhs.QDC_SIG5 &&
    lhs.QDC_SIG6 == rhs.QDC_SIG6 &&
    lhs.QDC_SIG7 == rhs.QDC_SIG7;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::rover_pkg::ToolData_<ContainerAllocator1> & lhs, const ::rover_pkg::ToolData_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace rover_pkg

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsFixedSize< ::rover_pkg::ToolData_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::rover_pkg::ToolData_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rover_pkg::ToolData_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rover_pkg::ToolData_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rover_pkg::ToolData_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rover_pkg::ToolData_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::rover_pkg::ToolData_<ContainerAllocator> >
{
  static const char* value()
  {
    return "37110460499bfee4e7ed1a257662b8e0";
  }

  static const char* value(const ::rover_pkg::ToolData_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x37110460499bfee4ULL;
  static const uint64_t static_value2 = 0xe7ed1a257662b8e0ULL;
};

template<class ContainerAllocator>
struct DataType< ::rover_pkg::ToolData_<ContainerAllocator> >
{
  static const char* value()
  {
    return "rover_pkg/ToolData";
  }

  static const char* value(const ::rover_pkg::ToolData_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::rover_pkg::ToolData_<ContainerAllocator> >
{
  static const char* value()
  {
    return "int16 QDC_SIG1\n"
"int16 QDC_SIG2\n"
"int16 QDC_SIG3\n"
"int16 QDC_SIG4\n"
"int16 QDC_SIG5\n"
"int16 QDC_SIG6\n"
"int16 QDC_SIG7\n"
;
  }

  static const char* value(const ::rover_pkg::ToolData_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::rover_pkg::ToolData_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.QDC_SIG1);
      stream.next(m.QDC_SIG2);
      stream.next(m.QDC_SIG3);
      stream.next(m.QDC_SIG4);
      stream.next(m.QDC_SIG5);
      stream.next(m.QDC_SIG6);
      stream.next(m.QDC_SIG7);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct ToolData_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::rover_pkg::ToolData_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::rover_pkg::ToolData_<ContainerAllocator>& v)
  {
    s << indent << "QDC_SIG1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.QDC_SIG1);
    s << indent << "QDC_SIG2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.QDC_SIG2);
    s << indent << "QDC_SIG3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.QDC_SIG3);
    s << indent << "QDC_SIG4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.QDC_SIG4);
    s << indent << "QDC_SIG5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.QDC_SIG5);
    s << indent << "QDC_SIG6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.QDC_SIG6);
    s << indent << "QDC_SIG7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.QDC_SIG7);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ROVER_PKG_MESSAGE_TOOLDATA_H
